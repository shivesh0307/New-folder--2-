const handleUpload = () => {
  if (selectedFile) {
    const reader = new FileReader();
    reader.onload = (e) => {
      const data = new Uint8Array(e.target.result);
      const workbook = XLSX.read(data, { type: 'array' });

      const sheet = workbook.Sheets[workbook.SheetNames[0]];
      const entries = XLSX.utils.sheet_to_json(sheet, {
        header: ['UID', 'Points'], // Specify the column names you want
        range: 1, // Skip the first row (assuming it contains headers)
      });

      // Map the entries to the desired format
      const formattedEntries = entries.map((entry) => ({
        playerId: entry.UID,
        points: entry.Points,
      }));

      // Filter out the entries starting from the last copied row
      const entriesToCopy = formattedEntries.slice(lastCopiedRow);

      // Update lastCopiedRow with the new value
      setLastCopiedRow(lastCopiedRow + entriesToCopy.length);

      // Store lastCopiedRow in local storage
      localStorage.setItem('lastCopiedRow', lastCopiedRow + entriesToCopy.length);

      // Add the entries to your application
      addEntries(entriesToCopy);
    };
    reader.readAsArrayBuffer(selectedFile);

    setMessage('Success');
  } else {
    setMessage('Error: Upload file');
  }
};
